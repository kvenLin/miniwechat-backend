<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clf.cloud.userserver.dao.UsersDao">
  <resultMap id="BaseResultMap" type="com.clf.cloud.userserver.domain.Users">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="face_image" jdbcType="VARCHAR" property="faceImage" />
    <result column="face_image_big" jdbcType="VARCHAR" property="faceImageBig" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="qrcode" jdbcType="VARCHAR" property="qrcode" />
    <result column="cid" jdbcType="VARCHAR" property="cid" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
  </resultMap>
  <resultMap id="SendUserResultMap" type="com.clf.cloud.userserver.vo.FriendRequestVO">
    <id column="id" property="sendUserId" jdbcType="VARCHAR"/>
    <result column="username" property="sendUsername" jdbcType="VARCHAR"/>
    <result column="nickname" property="sendNickname" jdbcType="VARCHAR"/>
    <result column="face_image" property="sendFaceImage" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap id="MyFriendsResultMap" type="com.clf.cloud.userserver.vo.MyFriendsVO">
    <id column="id" property="friendUserId" jdbcType="VARCHAR"/>
    <result column="username" property="friendUsername" jdbcType="VARCHAR"/>
    <result column="nickname" property="friendNickname" jdbcType="VARCHAR"/>
    <result column="face_image" property="friendFaceImage" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, face_image, face_image_big, nickname, qrcode, cid, mobile
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.clf.cloud.userserver.domain.Users" useGeneratedKeys="true">
    insert into users (username, `password`, face_image, 
      face_image_big, nickname, qrcode, 
      cid, mobile)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{faceImage,jdbcType=VARCHAR}, 
      #{faceImageBig,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{qrcode,jdbcType=VARCHAR}, 
      #{cid,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.clf.cloud.userserver.domain.Users" useGeneratedKeys="true">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="faceImage != null">
        face_image,
      </if>
      <if test="faceImageBig != null">
        face_image_big,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="qrcode != null">
        qrcode,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="faceImage != null">
        #{faceImage,jdbcType=VARCHAR},
      </if>
      <if test="faceImageBig != null">
        #{faceImageBig,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="qrcode != null">
        #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.clf.cloud.userserver.domain.Users">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="faceImage != null">
        face_image = #{faceImage,jdbcType=VARCHAR},
      </if>
      <if test="faceImageBig != null">
        face_image_big = #{faceImageBig,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="qrcode != null">
        qrcode = #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clf.cloud.userserver.domain.Users">
    update users
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      face_image = #{faceImage,jdbcType=VARCHAR},
      face_image_big = #{faceImageBig,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      qrcode = #{qrcode,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryFriendRequestList" resultMap="SendUserResultMap" parameterType="java.lang.String">
    select sender.id, sender.username, sender.nickname, sender.face_image
    from friends_request fr
    left join users sender
    on fr.send_user_id = sender.id
    where fr.accept_user_id = #{acceptUserId}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, username, `password`, face_image, face_image_big, nickname, qrcode, cid, mobile
    from users
  </select>
  <select id="selectOne" resultMap="BaseResultMap" parameterType="java.lang.String">
    select id, username, `password`, face_image, face_image_big, nickname, qrcode, cid, mobile
    from users
    where username = #{username} limit 1
  </select>
  <select id="queryMyFriends" resultMap="MyFriendsResultMap">
    select users.id, users.username, users.face_image, users.nickname
    from my_friends
    left join users
    on my_friends.my_friend_user_id = users.id
    where my_friends.my_user_id = #{userId}
  </select>
  <select id="selectByMobile" resultMap="BaseResultMap">
    select id, username, `password`, face_image, face_image_big, nickname, qrcode, cid, mobile
    from users
    where mobile = #{mobile}
  </select>
</mapper>